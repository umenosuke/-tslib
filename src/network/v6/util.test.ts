import { BITS, normalizeHextetStr, hextetStr2Bits, bits2HextetStr, bitsReverse, prefixNum2Bits, prefixStr2Bits } from "./util.js";

export { test };

async function test(): Promise<string[]> {
    const errors: string[] = [];

    {
        const msgPrefix = "BITS";
        if (BITS !== 340282366920938463463374607431768211455n) {
            const msg = msgPrefix + " => なんか値おかしい「" + BITS.toString(10) + "」";
            errors.push(msg);
        }
        if (BITS !== BigInt("0b11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111")) {
            const msg = msgPrefix + " => なんか値おかしい「" + BITS.toString(10) + "」";
            errors.push(msg);
        }
    }

    {
        const msgPrefix = "normalizeHextetStr";

        for (const data of <{ str: string }[]>[
            { str: "z" },
            { str: "a:" },
            { str: "a" },
            { str: "0.0.0.0:" },
            { str: ":::" },
            { str: "::a::" },
            { str: "0:0:0:0:0:0:0:0:0" },
            { str: "0:0:0:0::0:0:0:0" },
        ]) {
            if (normalizeHextetStr(data.str) != undefined) {
                const msg = msgPrefix + " => 不正なアドレスでなんか帰ってきてる「" + data.str + "」が「" + normalizeHextetStr(data.str) + "」になっている";
                errors.push(msg);
            }
        }

        for (const data of <{ in: string, out: string }[]>[
            { in: "::", out: "0:0:0:0:0:0:0:0" },
            { in: "a::", out: "a:0:0:0:0:0:0:0" },
            { in: "::a", out: "0:0:0:0:0:0:0:a" },
            { in: "a:a::", out: "a:a:0:0:0:0:0:0" },
            { in: "::a:a", out: "0:0:0:0:0:0:a:a" },
            { in: "::ffff:0.0.0.0", out: "0:0:0:0:0:ffff:0:0" },
            { in: "::ffff:0.255.255.0", out: "0:0:0:0:0:ffff:ff:ff00" },
            { in: "0.0.0.0:0.0.0.0:0.0.0.0:0.0.0.0", out: "0:0:0:0:0:0:0:0" },
            { in: "0.255.255.255:0.0.0.0:0.0.0.255:255.255.255.255", out: "ff:ffff:0:0:0:ff:ffff:ffff" },
            { in: "0:0:0:0:0:0:0:0", out: "0:0:0:0:0:0:0:0" },
            { in: "0:0:0:0::0:0:0", out: "0:0:0:0:0:0:0:0" },
            { in: "dead:beef::", out: "dead:beef:0:0:0:0:0:0" },
        ]) {
            if (normalizeHextetStr(data.in) !== data.out) {
                const msg = msgPrefix + " => 正規化失敗っぽい「" + data.in + "」「" + data.out + "」が「" + normalizeHextetStr(data.in) + "」になっている";
                errors.push(msg);
            }
        }
    }

    {
        const msgPrefix = "HextetStr2Bits";

        for (const data of <{ str: string }[]>[
            { str: "z" },
            { str: "a:" },
            { str: "a" },
            { str: "0.0.0.0:" },
            { str: ":::" },
            { str: "::a::" },
            { str: "0:0:0:0:0:0:0:0:0" },
            { str: "0:0:0:0::0:0:0:0" },
        ]) {
            if (hextetStr2Bits(data.str) != undefined) {
                const msg = msgPrefix + " => 不正なアドレスでなんか帰ってきてる「" + data.str + "」が「" + hextetStr2Bits(data.str) + "」になっている";
                errors.push(msg);
            }
        }

        for (const data of <{ in: string, out: bigint }[]>[
            { in: "::", out: 0n },
            { in: "a::", out: 51922968585348276285304963292200960n },
            { in: "::a", out: 10n },
            { in: "a:a::", out: 51923760866973418928680898731704320n },
            { in: "::a:a", out: 655370n },
            { in: "::ffff:0.0.0.0", out: 281470681743360n },
            { in: "::ffff:0.255.255.0", out: 281470698520320n },
            { in: "0.0.0.0:0.0.0.0:0.0.0.0:0.0.0.0", out: 0n },
            { in: "0.255.255.255:0.0.0.0:0.0.0.255:255.255.255.255", out: 1329227916556753358639470566248022015n },
            { in: "0:0:0:0:0:0:0:0", out: 0n },
            { in: "0:0:0:0::0:0:0", out: 0n },
            { in: "dead:beef::", out: 295990755014133383690938178081940045824n },
        ]) {
            if (hextetStr2Bits(data.in) !== data.out) {
                const msg = msgPrefix + " => パース失敗っぽい「" + data.in + "」「" + data.out + "」が「" + hextetStr2Bits(data.in) + "」になっている";
                errors.push(msg);
            }
        }
    }

    {
        const msgPrefix = "bits2HextetStr";

        for (const data of <{ out: string, in: bigint }[]>[
            { in: 340282366920938463463374607431768211456n, out: "0:0:0:0:0:0:0:0" },
            { in: 0n, out: "0:0:0:0:0:0:0:0" },
            { in: 51922968585348276285304963292200960n, out: "a:0:0:0:0:0:0:0" },
            { in: 10n, out: "0:0:0:0:0:0:0:a" },
            { in: 51923760866973418928680898731704320n, out: "a:a:0:0:0:0:0:0" },
            { in: 655370n, out: "0:0:0:0:0:0:a:a" },
            { in: 281470681743360n, out: "0:0:0:0:0:ffff:0:0" },
            { in: 281470698520320n, out: "0:0:0:0:0:ffff:ff:ff00" },
            { in: 0n, out: "0:0:0:0:0:0:0:0" },
            { in: 1329227916556753358639470566248022015n, out: "ff:ffff:0:0:0:ff:ffff:ffff" },
            { in: 0n, out: "0:0:0:0:0:0:0:0" },
            { in: 0n, out: "0:0:0:0:0:0:0:0" },
            { in: 295990755014133383690938178081940045824n, out: "dead:beef:0:0:0:0:0:0" },
            { in: -1n, out: "ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff" },
            { in: 340282366920938463463374607431768211455n, out: "ffff:ffff:ffff:ffff:ffff:ffff:ffff:ffff" },
        ]) {
            if (bits2HextetStr(data.in) !== data.out) {
                const msg = msgPrefix + " => toString失敗っぽい「" + data.out + "」「" + data.in + "」が「" + bits2HextetStr(data.in) + "」になっている";
                errors.push(msg);
            }
        }
    }

    {
        const msgPrefix = "bitsReverse";

        for (const data of <{ in: bigint, out: bigint }[]>[
            { in: 340282366920938463463374607431768211455n, out: 0n },
            { in: 0n, out: 340282366920938463463374607431768211455n },
            { in: -1n, out: 0n },
            {
                in: BigInt("0b01011100011101101010110111010000110100101100011111000110100000110000010100101010000101111110000111010101010101010101010101010101"),
                out: BigInt("0b10100011100010010101001000101111001011010011100000111001011111001111101011010101111010000001111000101010101010101010101010101010")
            },
        ]) {
            if (bitsReverse(data.in) !== data.out) {
                const msg = msgPrefix + " => 失敗っぽい「" + data.in.toString(2) + "」が「" + data.out.toString(2) + "」じゃなくて「" + bitsReverse(data.in).toString(2) + "」になっている";
                errors.push(msg);
            }
        }
    }

    {
        const msgPrefix = "prefixNum2Bits";

        for (const data of <{ in: number, out: bigint }[]>[
            { in: 128, out: 340282366920938463463374607431768211455n },
            { in: 127, out: 340282366920938463463374607431768211454n },
            { in: 126, out: 340282366920938463463374607431768211452n },
            { in: 125, out: 340282366920938463463374607431768211448n },
            { in: 124, out: 340282366920938463463374607431768211440n },
            { in: 123, out: 340282366920938463463374607431768211424n },
            { in: 122, out: 340282366920938463463374607431768211392n },
            { in: 121, out: 340282366920938463463374607431768211328n },
            { in: 120, out: 340282366920938463463374607431768211200n },
            { in: 119, out: 340282366920938463463374607431768210944n },
            { in: 118, out: 340282366920938463463374607431768210432n },
            { in: 117, out: 340282366920938463463374607431768209408n },
            { in: 116, out: 340282366920938463463374607431768207360n },
            { in: 115, out: 340282366920938463463374607431768203264n },
            { in: 114, out: 340282366920938463463374607431768195072n },
            { in: 113, out: 340282366920938463463374607431768178688n },
            { in: 112, out: 340282366920938463463374607431768145920n },
            { in: 111, out: 340282366920938463463374607431768080384n },
            { in: 110, out: 340282366920938463463374607431767949312n },
            { in: 109, out: 340282366920938463463374607431767687168n },
            { in: 108, out: 340282366920938463463374607431767162880n },
            { in: 107, out: 340282366920938463463374607431766114304n },
            { in: 106, out: 340282366920938463463374607431764017152n },
            { in: 105, out: 340282366920938463463374607431759822848n },
            { in: 104, out: 340282366920938463463374607431751434240n },
            { in: 103, out: 340282366920938463463374607431734657024n },
            { in: 102, out: 340282366920938463463374607431701102592n },
            { in: 101, out: 340282366920938463463374607431633993728n },
            { in: 100, out: 340282366920938463463374607431499776000n },
            { in: 99, out: 340282366920938463463374607431231340544n },
            { in: 98, out: 340282366920938463463374607430694469632n },
            { in: 97, out: 340282366920938463463374607429620727808n },
            { in: 96, out: 340282366920938463463374607427473244160n },
            { in: 95, out: 340282366920938463463374607423178276864n },
            { in: 94, out: 340282366920938463463374607414588342272n },
            { in: 93, out: 340282366920938463463374607397408473088n },
            { in: 92, out: 340282366920938463463374607363048734720n },
            { in: 91, out: 340282366920938463463374607294329257984n },
            { in: 90, out: 340282366920938463463374607156890304512n },
            { in: 89, out: 340282366920938463463374606882012397568n },
            { in: 88, out: 340282366920938463463374606332256583680n },
            { in: 87, out: 340282366920938463463374605232744955904n },
            { in: 86, out: 340282366920938463463374603033721700352n },
            { in: 85, out: 340282366920938463463374598635675189248n },
            { in: 84, out: 340282366920938463463374589839582167040n },
            { in: 83, out: 340282366920938463463374572247396122624n },
            { in: 82, out: 340282366920938463463374537063024033792n },
            { in: 81, out: 340282366920938463463374466694279856128n },
            { in: 80, out: 340282366920938463463374325956791500800n },
            { in: 79, out: 340282366920938463463374044481814790144n },
            { in: 78, out: 340282366920938463463373481531861368832n },
            { in: 77, out: 340282366920938463463372355631954526208n },
            { in: 76, out: 340282366920938463463370103832140840960n },
            { in: 75, out: 340282366920938463463365600232513470464n },
            { in: 74, out: 340282366920938463463356593033258729472n },
            { in: 73, out: 340282366920938463463338578634749247488n },
            { in: 72, out: 340282366920938463463302549837730283520n },
            { in: 71, out: 340282366920938463463230492243692355584n },
            { in: 70, out: 340282366920938463463086377055616499712n },
            { in: 69, out: 340282366920938463462798146679464787968n },
            { in: 68, out: 340282366920938463462221685927161364480n },
            { in: 67, out: 340282366920938463461068764422554517504n },
            { in: 66, out: 340282366920938463458762921413340823552n },
            { in: 65, out: 340282366920938463454151235394913435648n },
            { in: 64, out: 340282366920938463444927863358058659840n },
            { in: 63, out: 340282366920938463426481119284349108224n },
            { in: 62, out: 340282366920938463389587631136930004992n },
            { in: 61, out: 340282366920938463315800654842091798528n },
            { in: 60, out: 340282366920938463168226702252415385600n },
            { in: 59, out: 340282366920938462873078797073062559744n },
            { in: 58, out: 340282366920938462282782986714356908032n },
            { in: 57, out: 340282366920938461102191365996945604608n },
            { in: 56, out: 340282366920938458741008124562122997760n },
            { in: 55, out: 340282366920938454018641641692477784064n },
            { in: 54, out: 340282366920938444573908675953187356672n },
            { in: 53, out: 340282366920938425684442744474606501888n },
            { in: 52, out: 340282366920938387905510881517444792320n },
            { in: 51, out: 340282366920938312347647155603121373184n },
            { in: 50, out: 340282366920938161231919703774474534912n },
            { in: 49, out: 340282366920937859000464800117180858368n },
            { in: 48, out: 340282366920937254537554992802593505280n },
            { in: 47, out: 340282366920936045611735378173418799104n },
            { in: 46, out: 340282366920933627760096148915069386752n },
            { in: 45, out: 340282366920928792056817690398370562048n },
            { in: 44, out: 340282366920919120650260773364972912640n },
            { in: 43, out: 340282366920899777837146939298177613824n },
            { in: 42, out: 340282366920861092210919271164587016192n },
            { in: 41, out: 340282366920783720958463934897405820928n },
            { in: 40, out: 340282366920628978453553262363043430400n },
            { in: 39, out: 340282366920319493443731917294318649344n },
            { in: 38, out: 340282366919700523424089227156869087232n },
            { in: 37, out: 340282366918462583384803846881969963008n },
            { in: 36, out: 340282366915986703306233086332171714560n },
            { in: 35, out: 340282366911034943149091565232575217664n },
            { in: 34, out: 340282366901131422834808523033382223872n },
            { in: 33, out: 340282366881324382206242438634996236288n },
            { in: 32, out: 340282366841710300949110269838224261120n },
            { in: 31, out: 340282366762482138434845932244680310784n },
            { in: 30, out: 340282366604025813406317257057592410112n },
            { in: 29, out: 340282366287113163349259906683416608768n },
            { in: 28, out: 340282365653287863235145205935065006080n },
            { in: 27, out: 340282364385637263006915804438361800704n },
            { in: 26, out: 340282361850336062550457001444955389952n },
            { in: 25, out: 340282356779733661637539395458142568448n },
            { in: 24, out: 340282346638528859811704183484516925440n },
            { in: 23, out: 340282326356119256160033759537265639424n },
            { in: 22, out: 340282285791300048856692911642763067392n },
            { in: 21, out: 340282204661661634250011215853757923328n },
            { in: 20, out: 340282042402384805036647824275747635200n },
            { in: 19, out: 340281717883831146609921041119727058944n },
            { in: 18, out: 340281068846723829756467474807685906432n },
            { in: 17, out: 340279770772509196049560342183603601408n },
            { in: 16, out: 340277174624079928635746076935438991360n },
            { in: 15, out: 340271982327221393808117546439109771264n },
            { in: 14, out: 340261597733504324152860485446451331072n },
            { in: 13, out: 340240828546070184842346363461134450688n },
            { in: 12, out: 340199290171201906221318119490500689920n },
            { in: 11, out: 340116213421465348979261631549233168384n },
            { in: 10, out: 339950059921992234495148655666698125312n },
            { in: 9, out: 339617752923046005526922703901628039168n },
            { in: 8, out: 338953138925153547590470800371487866880n },
            { in: 7, out: 337623910929368631717566993311207522304n },
            { in: 6, out: 334965454937798799971759379190646833152n },
            { in: 5, out: 329648542954659136480144150949525454848n },
            { in: 4, out: 319014718988379809496913694467282698240n },
            { in: 3, out: 297747071055821155530452781502797185024n },
            { in: 2, out: 255211775190703847597530955573826158592n },
            { in: 1, out: 170141183460469231731687303715884105728n },
            { in: 0, out: 0n },
            { in: 130, out: undefined },
            { in: 129, out: undefined },
            { in: -2, out: undefined },
            { in: -1, out: undefined },
        ]) {
            if (prefixNum2Bits(data.in) !== data.out) {
                const msg = msgPrefix + " => 失敗っぽい「" + data.in + "」が「" + data.out + "」じゃなく「" + prefixNum2Bits(data.in) + "」になっている";
                errors.push(msg);
            }
        }
    }

    {
        const msgPrefix = "prefixStr2Bits";

        for (const data of <{ in: string, out: bigint }[]>[
            { in: "128", out: 340282366920938463463374607431768211455n },
            { in: "127", out: 340282366920938463463374607431768211454n },
            { in: "126", out: 340282366920938463463374607431768211452n },
            { in: "125", out: 340282366920938463463374607431768211448n },
            { in: "124", out: 340282366920938463463374607431768211440n },
            { in: "123", out: 340282366920938463463374607431768211424n },
            { in: "122", out: 340282366920938463463374607431768211392n },
            { in: "121", out: 340282366920938463463374607431768211328n },
            { in: "120", out: 340282366920938463463374607431768211200n },
            { in: "119", out: 340282366920938463463374607431768210944n },
            { in: "118", out: 340282366920938463463374607431768210432n },
            { in: "117", out: 340282366920938463463374607431768209408n },
            { in: "116", out: 340282366920938463463374607431768207360n },
            { in: "115", out: 340282366920938463463374607431768203264n },
            { in: "114", out: 340282366920938463463374607431768195072n },
            { in: "113", out: 340282366920938463463374607431768178688n },
            { in: "112", out: 340282366920938463463374607431768145920n },
            { in: "111", out: 340282366920938463463374607431768080384n },
            { in: "110", out: 340282366920938463463374607431767949312n },
            { in: "109", out: 340282366920938463463374607431767687168n },
            { in: "108", out: 340282366920938463463374607431767162880n },
            { in: "107", out: 340282366920938463463374607431766114304n },
            { in: "106", out: 340282366920938463463374607431764017152n },
            { in: "105", out: 340282366920938463463374607431759822848n },
            { in: "104", out: 340282366920938463463374607431751434240n },
            { in: "103", out: 340282366920938463463374607431734657024n },
            { in: "102", out: 340282366920938463463374607431701102592n },
            { in: "101", out: 340282366920938463463374607431633993728n },
            { in: "100", out: 340282366920938463463374607431499776000n },
            { in: "99", out: 340282366920938463463374607431231340544n },
            { in: "98", out: 340282366920938463463374607430694469632n },
            { in: "97", out: 340282366920938463463374607429620727808n },
            { in: "96", out: 340282366920938463463374607427473244160n },
            { in: "95", out: 340282366920938463463374607423178276864n },
            { in: "94", out: 340282366920938463463374607414588342272n },
            { in: "93", out: 340282366920938463463374607397408473088n },
            { in: "92", out: 340282366920938463463374607363048734720n },
            { in: "91", out: 340282366920938463463374607294329257984n },
            { in: "90", out: 340282366920938463463374607156890304512n },
            { in: "89", out: 340282366920938463463374606882012397568n },
            { in: "88", out: 340282366920938463463374606332256583680n },
            { in: "87", out: 340282366920938463463374605232744955904n },
            { in: "86", out: 340282366920938463463374603033721700352n },
            { in: "85", out: 340282366920938463463374598635675189248n },
            { in: "84", out: 340282366920938463463374589839582167040n },
            { in: "83", out: 340282366920938463463374572247396122624n },
            { in: "82", out: 340282366920938463463374537063024033792n },
            { in: "81", out: 340282366920938463463374466694279856128n },
            { in: "80", out: 340282366920938463463374325956791500800n },
            { in: "79", out: 340282366920938463463374044481814790144n },
            { in: "78", out: 340282366920938463463373481531861368832n },
            { in: "77", out: 340282366920938463463372355631954526208n },
            { in: "76", out: 340282366920938463463370103832140840960n },
            { in: "75", out: 340282366920938463463365600232513470464n },
            { in: "74", out: 340282366920938463463356593033258729472n },
            { in: "73", out: 340282366920938463463338578634749247488n },
            { in: "72", out: 340282366920938463463302549837730283520n },
            { in: "71", out: 340282366920938463463230492243692355584n },
            { in: "70", out: 340282366920938463463086377055616499712n },
            { in: "69", out: 340282366920938463462798146679464787968n },
            { in: "68", out: 340282366920938463462221685927161364480n },
            { in: "67", out: 340282366920938463461068764422554517504n },
            { in: "66", out: 340282366920938463458762921413340823552n },
            { in: "65", out: 340282366920938463454151235394913435648n },
            { in: "64", out: 340282366920938463444927863358058659840n },
            { in: "63", out: 340282366920938463426481119284349108224n },
            { in: "62", out: 340282366920938463389587631136930004992n },
            { in: "61", out: 340282366920938463315800654842091798528n },
            { in: "60", out: 340282366920938463168226702252415385600n },
            { in: "59", out: 340282366920938462873078797073062559744n },
            { in: "58", out: 340282366920938462282782986714356908032n },
            { in: "57", out: 340282366920938461102191365996945604608n },
            { in: "56", out: 340282366920938458741008124562122997760n },
            { in: "55", out: 340282366920938454018641641692477784064n },
            { in: "54", out: 340282366920938444573908675953187356672n },
            { in: "53", out: 340282366920938425684442744474606501888n },
            { in: "52", out: 340282366920938387905510881517444792320n },
            { in: "51", out: 340282366920938312347647155603121373184n },
            { in: "50", out: 340282366920938161231919703774474534912n },
            { in: "49", out: 340282366920937859000464800117180858368n },
            { in: "48", out: 340282366920937254537554992802593505280n },
            { in: "47", out: 340282366920936045611735378173418799104n },
            { in: "46", out: 340282366920933627760096148915069386752n },
            { in: "45", out: 340282366920928792056817690398370562048n },
            { in: "44", out: 340282366920919120650260773364972912640n },
            { in: "43", out: 340282366920899777837146939298177613824n },
            { in: "42", out: 340282366920861092210919271164587016192n },
            { in: "41", out: 340282366920783720958463934897405820928n },
            { in: "40", out: 340282366920628978453553262363043430400n },
            { in: "39", out: 340282366920319493443731917294318649344n },
            { in: "38", out: 340282366919700523424089227156869087232n },
            { in: "37", out: 340282366918462583384803846881969963008n },
            { in: "36", out: 340282366915986703306233086332171714560n },
            { in: "35", out: 340282366911034943149091565232575217664n },
            { in: "34", out: 340282366901131422834808523033382223872n },
            { in: "33", out: 340282366881324382206242438634996236288n },
            { in: "32", out: 340282366841710300949110269838224261120n },
            { in: "31", out: 340282366762482138434845932244680310784n },
            { in: "30", out: 340282366604025813406317257057592410112n },
            { in: "29", out: 340282366287113163349259906683416608768n },
            { in: "28", out: 340282365653287863235145205935065006080n },
            { in: "27", out: 340282364385637263006915804438361800704n },
            { in: "26", out: 340282361850336062550457001444955389952n },
            { in: "25", out: 340282356779733661637539395458142568448n },
            { in: "24", out: 340282346638528859811704183484516925440n },
            { in: "23", out: 340282326356119256160033759537265639424n },
            { in: "22", out: 340282285791300048856692911642763067392n },
            { in: "21", out: 340282204661661634250011215853757923328n },
            { in: "20", out: 340282042402384805036647824275747635200n },
            { in: "19", out: 340281717883831146609921041119727058944n },
            { in: "18", out: 340281068846723829756467474807685906432n },
            { in: "17", out: 340279770772509196049560342183603601408n },
            { in: "16", out: 340277174624079928635746076935438991360n },
            { in: "15", out: 340271982327221393808117546439109771264n },
            { in: "14", out: 340261597733504324152860485446451331072n },
            { in: "13", out: 340240828546070184842346363461134450688n },
            { in: "12", out: 340199290171201906221318119490500689920n },
            { in: "11", out: 340116213421465348979261631549233168384n },
            { in: "10", out: 339950059921992234495148655666698125312n },
            { in: "9", out: 339617752923046005526922703901628039168n },
            { in: "8", out: 338953138925153547590470800371487866880n },
            { in: "7", out: 337623910929368631717566993311207522304n },
            { in: "6", out: 334965454937798799971759379190646833152n },
            { in: "5", out: 329648542954659136480144150949525454848n },
            { in: "4", out: 319014718988379809496913694467282698240n },
            { in: "3", out: 297747071055821155530452781502797185024n },
            { in: "2", out: 255211775190703847597530955573826158592n },
            { in: "01", out: 170141183460469231731687303715884105728n },
            { in: "0", out: 0n },
            { in: "00", out: 0n },
            { in: "0000", out: undefined },
            { in: "130", out: undefined },
            { in: "129", out: undefined },
            { in: "-2", out: undefined },
            { in: "-1", out: undefined },
            { in: "aaa", out: undefined },
            { in: "11a", out: undefined },
            { in: "a11", out: undefined },
            { in: "1a1", out: undefined },
        ]) {
            if (prefixStr2Bits(data.in) !== data.out) {
                const msg = msgPrefix + " => 失敗っぽい「" + data.in + "」が「" + data.out + "」じゃなく「" + prefixStr2Bits(data.in) + "」になっている";
                errors.push(msg);
            }
        }
    }

    return errors;
}
